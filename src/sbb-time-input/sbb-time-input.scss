@use '../global/styles/' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-time-input-color: var(--sbb-color-charcoal-default);
  --sbb-time-input-max-width: #{sbb.px-to-rem-build(58)};

  @include sbb.mq($from: medium) {
    --sbb-time-input-max-width: #{sbb.px-to-rem-build(65)};
  }

  display: inline-block;
}

:host([disabled]:not([disabled='false'])) {
  --sbb-time-input-color: var(--sbb-color-granite-default);

  @include sbb.if-forced-colors {
    --sbb-time-input-color: GrayText;
  }
}

input {
  @include sbb.text-m--regular;
  @include sbb.input-reset;

  max-width: var(--sbb-time-input-max-width);

  // Color is inherited from sbb-form-field, if the sbb-time-input is used within it.
  color: var(--sbb-form-field-text-color, var(--sbb-time-input-color));

  // Fill color needed for Safari
  -webkit-text-fill-color: var(--sbb-form-field-text-color, var(--sbb-time-input-color));
  opacity: 1;

  &::placeholder {
    @include sbb.placeholder;
  }

  :host([disabled]:not([disabled='false'])) & {
    text-decoration: line-through !important;

    &::placeholder {
      color: var(--sbb-form-field-text-color, var(--sbb-time-input-color)) !important;
      -webkit-text-fill-color: var(
        --sbb-form-field-text-color,
        var(--sbb-time-input-color)
      ) !important;
      text-decoration: line-through !important;
    }
  }
}
